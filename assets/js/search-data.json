{
  
    
        "post0": {
            "title": "Title",
            "content": "# &quot;Bash File&quot; &gt; &quot;tests using bash commands&quot; - toc:false- branch: master - badges: true - comments: true - author: Sean Yeung - categories: [fastpages, jupyter] . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/syeung2/vscode exists. Directory /home/syeung2/vscode/APCSP does not exists... cloning https://github.com/nighthawkcoders/APCSP.git Cloning into &#39;APCSP&#39;... remote: Enumerating objects: 9173, done. remote: Counting objects: 100% (748/748), done. remote: Compressing objects: 100% (313/313), done. remote: Total 9173 (delta 454), reused 702 (delta 414), pack-reused 8425 Receiving objects: 100% (9173/9173), 16.49 MiB | 12.58 MiB/s, done. Resolving deltas: 100% (4949/4949), done. Directory /home/syeung2/vscode/APCSP exists. . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/syeung2/vscode/APCSP list top level or root of files with project pulled from github Gemfile _action_files _layouts _posts docker-compose.yml LICENSE _config.yml _notebooks _sass images Makefile _fastpages_docs _pages _word index.html README.md _includes _plugins assets python list again with hidden files pulled from github . .gitignore _action_files _pages docker-compose.yml .. .vscode _config.yml _plugins images .devcontainer.json Gemfile _fastpages_docs _posts index.html .git LICENSE _includes _sass python .gitattributes Makefile _layouts _word .github README.md _notebooks assets list all files in long format total 120 drwxr-xr-x 18 syeung2 syeung2 4096 Aug 25 22:34 . drwxr-xr-x 4 syeung2 syeung2 4096 Aug 25 22:34 .. -rw-r--r-- 1 syeung2 syeung2 420 Aug 25 22:34 .devcontainer.json drwxr-xr-x 8 syeung2 syeung2 4096 Aug 25 22:34 .git -rw-r--r-- 1 syeung2 syeung2 84 Aug 25 22:34 .gitattributes drwxr-xr-x 4 syeung2 syeung2 4096 Aug 25 22:34 .github -rw-r--r-- 1 syeung2 syeung2 917 Aug 25 22:34 .gitignore drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 .vscode -rwxr-xr-x 1 syeung2 syeung2 1304 Aug 25 22:34 Gemfile -rw-r--r-- 1 syeung2 syeung2 11351 Aug 25 22:34 LICENSE -rwxr-xr-x 1 syeung2 syeung2 1422 Aug 25 22:34 Makefile -rwxr-xr-x 1 syeung2 syeung2 3614 Aug 25 22:34 README.md drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _action_files -rw-r--r-- 1 syeung2 syeung2 3716 Aug 25 22:34 _config.yml drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _fastpages_docs drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _includes drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _layouts drwxr-xr-x 3 syeung2 syeung2 4096 Aug 25 22:34 _notebooks drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _pages drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _plugins drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _posts drwxr-xr-x 3 syeung2 syeung2 4096 Aug 25 22:34 _sass drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 _word drwxr-xr-x 4 syeung2 syeung2 4096 Aug 25 22:34 assets -rwxr-xr-x 1 syeung2 syeung2 1136 Aug 25 22:34 docker-compose.yml drwxr-xr-x 5 syeung2 syeung2 4096 Aug 25 22:34 images -rw-r--r-- 1 syeung2 syeung2 1061 Aug 25 22:34 index.html drwxr-xr-x 2 syeung2 syeung2 4096 Aug 25 22:34 python . test=“python3” # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo “$check” else # less than zero echo “$check” fi . “” . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . Look for posts /home/syeung2/vscode/APCSP/_posts total 228 -rw-r--r-- 1 syeung2 syeung2 21306 Aug 25 22:34 2022-06-01-TT160-deploy.md -rw-r--r-- 1 syeung2 syeung2 5861 Aug 25 22:34 2022-07-07-PBL-binary.md -rw-r--r-- 1 syeung2 syeung2 3085 Aug 25 22:34 2022-07-08-PBL-grade_calc.md -rw-r--r-- 1 syeung2 syeung2 3698 Aug 25 22:34 2022-07-08-PBL-graph.md -rw-r--r-- 1 syeung2 syeung2 5729 Aug 25 22:34 2022-07-08-PBL-life.md -rw-r--r-- 1 syeung2 syeung2 14387 Aug 25 22:34 2022-07-08-PBL-snake.md -rw-r--r-- 1 syeung2 syeung2 334 Aug 25 22:34 2022-07-10-PBL-database.md -rw-r--r-- 1 syeung2 syeung2 2908 Aug 25 22:34 2022-07-10-PBL-jokes.md -rw-r--r-- 1 syeung2 syeung2 4046 Aug 25 22:34 2022-07-10-PBL-rapidapi.md -rw-r--r-- 1 syeung2 syeung2 6685 Aug 25 22:34 2022-07-19-PBL-calculator.md -rw-r--r-- 1 syeung2 syeung2 23325 Aug 25 22:34 2022-07-25-CSP-workshop.md -rw-r--r-- 1 syeung2 syeung2 2333 Aug 25 22:34 2022-08-15-TP000-student_score_history.md -rw-r--r-- 1 syeung2 syeung2 4363 Aug 25 22:34 2022-08-15-TP100-pseudo_code.md -rw-r--r-- 1 syeung2 syeung2 7968 Aug 25 22:34 2022-08-15-TR100-tool_setup.md -rw-r--r-- 1 syeung2 syeung2 15409 Aug 25 22:34 2022-08-15-TT100-tools.md -rw-r--r-- 1 syeung2 syeung2 5590 Aug 25 22:34 2022-08-15-TT101-vscode-wsl.md -rw-r--r-- 1 syeung2 syeung2 2155 Aug 25 22:34 2022-08-22-TR110-intro_python.md -rw-r--r-- 1 syeung2 syeung2 5173 Aug 25 22:34 2022-08-22-TT110-fastpages.md -rw-r--r-- 1 syeung2 syeung2 2798 Aug 25 22:34 2022-08-22-TT110-focus.md -rw-r--r-- 1 syeung2 syeung2 2737 Aug 25 22:34 2022-08-29-TR120-data_abstract.md -rw-r--r-- 1 syeung2 syeung2 10683 Aug 25 22:34 2022-08-29-TT120-agile.md -rw-r--r-- 1 syeung2 syeung2 4498 Aug 25 22:34 2022-08-29-TT120-html_fragments.md -rw-r--r-- 1 syeung2 syeung2 9037 Aug 25 22:34 2022-09-05-TP130-create_performance_task.md -rw-r--r-- 1 syeung2 syeung2 7753 Aug 25 22:34 2022-09-05-TP131-create-task-bria.md -rw-r--r-- 1 syeung2 syeung2 8066 Aug 25 22:34 2022-09-05-TR130-creative_development.md -rw-r--r-- 1 syeung2 syeung2 3520 Aug 25 22:34 2022-09-05-TT130-applab.md -rw-r--r-- 1 syeung2 syeung2 720 Aug 25 22:34 README.md .",
            "url": "https://syeung2.github.io/xc22/2022/08/25/bash_file.html",
            "relUrl": "/2022/08/25/bash_file.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "# &quot;Jupyter Notebook&quot; &gt; &quot;python code&quot; - toc:false- branch: master - badges: true - comments: true - author: Sean Yeung - categories: [fastpages, jupyter] . msg = &quot;Hello World&quot; print(msg) . Hello World .",
            "url": "https://syeung2.github.io/xc22/2022/08/22/JupyterNotebook.html",
            "relUrl": "/2022/08/22/JupyterNotebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://syeung2.github.io/xc22/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://syeung2.github.io/xc22/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . Talking about xc here. . Ive made a change to debug this error&gt; . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://syeung2.github.io/xc22/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://syeung2.github.io/xc22/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}